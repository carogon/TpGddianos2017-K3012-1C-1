/*BASE DE DATOS*/
USE GD1C2017;
-- CREANDO ESQUEMA
BEGIN TRANSACTION

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = N'GDDIANOS')
EXEC sys.sp_executesql N'CREATE SCHEMA [GDDIANOS] AUTHORIZATION [gd]'
COMMIT;

-- DROP DE TABLAS
IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ROL_POR_USUARIO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.ROL_POR_USUARIO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FUNCIONALIDAD_POR_ROL') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.FUNCIONALIDAD_POR_ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FUNCIONALIDAD') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.FUNCIONALIDAD

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ROL') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.COCHE_TURNO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.COCHE_TURNO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.TURNO_POR_COCHE') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.TURNO_POR_COCHE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.COCHE') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.COCHE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ITEM_PAGO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.ITEM_PAGO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.PAGO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.PAGO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ITEM_FACTURA') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.ITEM_FACTURA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FACTURA') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.FACTURA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.VIAJE') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.VIAJE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.TURNO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.TURNO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.USUARIO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.USUARIO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.CLIENTE') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.CLIENTE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.CHOFER') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.CHOFER

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.PERSONA') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.PERSONA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.MODELO') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.MODELO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.MARCA') AND OBJECTPROPERTY(id, 'IsUserTable') = 1)
DROP TABLE GDDIANOS.MARCA


/*Drops procedures*/

GO
IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.SHOW_LISTADO'))
DROP PROCEDURE GDDIANOS.SHOW_LISTADO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.VIAJE_YA_REGISTRADO'))
DROP PROCEDURE GDDIANOS.VIAJE_YA_REGISTRADO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ROLES_USUARIO'))
DROP PROCEDURE GDDIANOS.GET_ROLES_USUARIO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_FUNCIONALIDADES_POR_ROL'))
DROP PROCEDURE GDDIANOS.GET_FUNCIONALIDADES_POR_ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.EXISTE_USUARIO'))
DROP PROCEDURE GDDIANOS.EXISTE_USUARIO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.PASSWORD_CORRECTA'))
DROP PROCEDURE GDDIANOS.PASSWORD_CORRECTA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_FUNCIONALIDADES_ROL'))
DROP PROCEDURE GDDIANOS.GET_FUNCIONALIDADES_ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_CLIENTE'))
DROP PROCEDURE GDDIANOS.FIND_CLIENTE 

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_CHOFER'))
DROP PROCEDURE GDDIANOS.FIND_CHOFER

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_CLIENTE_ACTIVO'))
DROP PROCEDURE GDDIANOS.FIND_CLIENTE_ACTIVO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_CHOFER_ACTIVO'))
DROP PROCEDURE GDDIANOS.FIND_CHOFER_ACTIVO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_PERSONA'))
DROP PROCEDURE GDDIANOS.GET_PERSONA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_TELEFONO'))
DROP PROCEDURE GDDIANOS.GET_TELEFONO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.MODIFICAR_PERSONA'))
DROP PROCEDURE GDDIANOS.MODIFICAR_PERSONA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.BAJA_PERSONA'))
DROP PROCEDURE GDDIANOS.BAJA_PERSONA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ROLES_USUARIO_POR_ID'))
DROP PROCEDURE GDDIANOS.GET_ROLES_USUARIO_POR_ID

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_TIPO_POR_DNI'))
DROP PROCEDURE GDDIANOS.GET_TIPO_POR_DNI

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ALTA_PERSONA'))
DROP PROCEDURE GDDIANOS.ALTA_PERSONA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ACTUALIZAR_PERSONA'))
DROP PROCEDURE GDDIANOS.ACTUALIZAR_PERSONA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_PERSONA_POR_DNI'))
DROP PROCEDURE GDDIANOS.GET_PERSONA_POR_DNI

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_MODELOS'))
DROP PROCEDURE GDDIANOS.GET_MODELOS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_MARCAS'))
DROP PROCEDURE GDDIANOS.GET_MARCAS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_PATENTES'))
DROP PROCEDURE GDDIANOS.GET_PATENTES

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ESTADO_CHOFER'))
DROP PROCEDURE GDDIANOS.GET_ESTADO_CHOFER

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ALTA_ROL'))
DROP PROCEDURE GDDIANOS.ALTA_ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_ROL'))
DROP PROCEDURE GDDIANOS.FIND_ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ROLES'))
DROP PROCEDURE GDDIANOS.GET_ROLES

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ROL_POR_NOMBRE'))
DROP PROCEDURE GDDIANOS.GET_ROL_POR_NOMBRE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.BAJA_ROL'))
DROP PROCEDURE GDDIANOS.BAJA_ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.MODIFICAR_AUTOMOVIL_POR_PATENTE'))
DROP PROCEDURE GDDIANOS.MODIFICAR_AUTOMOVIL_POR_PATENTE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ALTA_AUTOMOVIL'))
DROP PROCEDURE GDDIANOS.ALTA_AUTOMOVIL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_AUTOMOVIL_POR_PATENTE'))
DROP PROCEDURE GDDIANOS.GET_AUTOMOVIL_POR_PATENTE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.BAJA_AUTOMOVIL_POR_PATENTE'))
DROP PROCEDURE GDDIANOS.BAJA_AUTOMOVIL_POR_PATENTE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_DETALLE'))
DROP PROCEDURE GDDIANOS.GET_DETALLE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_HORA_INICIO'))
DROP PROCEDURE GDDIANOS.GET_HORA_INICIO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_HORA_FIN'))
DROP PROCEDURE GDDIANOS.GET_HORA_FIN

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.BAJA_TURNO'))
DROP PROCEDURE GDDIANOS.BAJA_TURNO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_TURNO_ID'))
DROP PROCEDURE GDDIANOS.FIND_TURNO_ID

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_TURNO_DESCRIPCION'))
DROP PROCEDURE GDDIANOS.FIND_TURNO_DESCRIPCION

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ALTA_TURNO'))
DROP PROCEDURE GDDIANOS.ALTA_TURNO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.MODIFICAR_TURNO'))
DROP PROCEDURE GDDIANOS.MODIFICAR_TURNO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ROL_POR_NOMBRE'))
DROP PROCEDURE GDDIANOS.ROL_POR_NOMBRE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_FUNCIONALIDADES'))
DROP PROCEDURE GDDIANOS.GET_FUNCIONALIDADES

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.MODIFICAR_ROL'))
DROP PROCEDURE GDDIANOS.MODIFICAR_ROL

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ROLES_HABILITADOS'))
DROP PROCEDURE GDDIANOS.GET_ROLES_HABILITADOS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.sumarIntentoLogin'))
DROP PROCEDURE GDDIANOS.sumarIntentoLogin

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.setIntentosCero'))
DROP PROCEDURE GDDIANOS.setIntentosCero

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_HORARIOS'))
DROP PROCEDURE GDDIANOS.GET_HORARIOS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_TURNOS'))
DROP PROCEDURE GDDIANOS.GET_TURNOS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_VIAJES_A_PAGAR'))
DROP PROCEDURE GDDIANOS.GET_VIAJES_A_PAGAR

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.CREAR_PAGO'))
DROP PROCEDURE GDDIANOS.CREAR_PAGO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.CREAR_FACTURA'))
DROP PROCEDURE GDDIANOS.CREAR_FACTURA;



IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ID_FACTURA_INSERTADO'))
DROP PROCEDURE GDDIANOS.GET_ID_FACTURA_INSERTADO;

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.CHOFER_ASIGNADO'))
DROP PROCEDURE GDDIANOS.CHOFER_ASIGNADO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_TURNO_COCHE'))
DROP PROCEDURE GDDIANOS.GET_TURNO_COCHE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_TURNO_ASIGNADO_PARA_COCHE'))
DROP PROCEDURE GDDIANOS.FIND_TURNO_ASIGNADO_PARA_COCHE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_TURNO_NO_ASIGNADO_PARA_COCHE'))
DROP PROCEDURE GDDIANOS.FIND_TURNO_NO_ASIGNADO_PARA_COCHE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.INGRESAR_TURNO_AUTOMOVIL_POR_PATENTE'))
DROP PROCEDURE GDDIANOS.INGRESAR_TURNO_AUTOMOVIL_POR_PATENTE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.MODIFICAR_TURNO_AUTOMOVIL_POR_PATENTE'))
DROP PROCEDURE GDDIANOS.MODIFICAR_TURNO_AUTOMOVIL_POR_PATENTE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_VIAJES_A_FACTURAR'))
DROP PROCEDURE GDDIANOS.GET_VIAJES_A_FACTURAR

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.FIND_TURNO_HABILITADO'))
DROP PROCEDURE GDDIANOS.FIND_TURNO_HABILITADO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.VIAJE_YA_FACTURADO'))
DROP PROCEDURE GDDIANOS.VIAJE_YA_FACTURADO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.CAMBIAR_PASSWORD'))
DROP PROCEDURE GDDIANOS.CAMBIAR_PASSWORD

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_AUTOS_ACTIVOS_DE_CHOFER'))
DROP PROCEDURE GDDIANOS.GET_AUTOS_ACTIVOS_DE_CHOFER

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.REGISTRAR_VIAJE'))
DROP PROCEDURE GDDIANOS.REGISTRAR_VIAJE
 
IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_USUARIO_POR_DNI'))
DROP PROCEDURE GDDIANOS.GET_USUARIO_POR_DNI

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.ROL_HABILITADO_POR_USUARIO'))
DROP PROCEDURE GDDIANOS.ROL_HABILITADO_POR_USUARIO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_TURNOS_AUTO'))
DROP PROCEDURE GDDIANOS.GET_TURNOS_AUTO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ID_PAGO_INSERTADO'))
DROP PROCEDURE GDDIANOS.GET_ID_PAGO_INSERTADO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.VIAJE_YA_RENDIDO'))
DROP PROCEDURE GDDIANOS.VIAJE_YA_RENDIDO

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.HORARIO_SE_ENCUENTRA_EN_TURNO'))
DROP PROCEDURE  GDDIANOS.HORARIO_SE_ENCUENTRA_EN_TURNO

/*Drops TRIGGERS*/

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.TRIG_ALTA_USUARIO_CLIENTE'))
DROP TRIGGER GDDIANOS.TRIG_ALTA_USUARIO_CLIENTE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.TRIG_ALTA_USUARIO_CHOFER'))
DROP TRIGGER GDDIANOS.TRIG_ALTA_USUARIO_CHOFER

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.CHECK_PERSONA_CLIENTE_FACTURA'))
DROP TRIGGER GDDIANOS.CHECK_PERSONA_CLIENTE_FACTURA

/*Drops FUNCTIONS*/
IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.PASSWORD_HASH'))
DROP FUNCTION GDDIANOS.PASSWORD_HASH

GO
IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.CALCULAR_TRIMESTRE'))
DROP FUNCTION GDDIANOS.CALCULAR_TRIMESTRE

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GETIDPERSONAPORDNI'))
DROP FUNCTION GDDIANOS.GETIDPERSONAPORDNI

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ID_TURNO_POR_HORAS'))
DROP FUNCTION GDDIANOS.GET_ID_TURNO_POR_HORAS

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ID_TURNO_POR_HORARIO'))
DROP FUNCTION GDDIANOS.GET_ID_TURNO_POR_HORARIO


IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_IMPORTE_ITEM_FACTURA'))
DROP FUNCTION GDDIANOS.GET_IMPORTE_ITEM_FACTURA

IF EXISTS(SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID('GDDIANOS.GET_ID_PERSONA_POR_DNI'))
DROP FUNCTION GDDIANOS.GET_ID_PERSONA_POR_DNI






/*Drops TYPES*/

IF EXISTS(SELECT * FROM dbo.sysTYPES WHERE NAME=('FUNC_TABLETYPE'))
DROP TYPE GDDIANOS.FUNC_TABLETYPE

IF EXISTS(SELECT * FROM dbo.sysTYPES WHERE NAME=('ITEM_VIAJES_TABLETYPE'))
DROP TYPE GDDIANOS.ITEM_VIAJES_TABLETYPE;

/**************/
/* SECUENCIAS */
/**************/
IF EXISTS(SELECT * FROM dbo.sysOBJECTS WHERE NAME=('FACT_ID'))
DROP SEQUENCE GDDIANOS.FACT_ID
CREATE SEQUENCE GDDIANOS.FACT_ID AS INT START WITH 10610 INCREMENT BY 1;

IF EXISTS(SELECT * FROM dbo.sysOBJECTS WHERE NAME=('PAGO_NUMERO'))
DROP SEQUENCE GDDIANOS.PAGO_NUMERO
CREATE SEQUENCE GDDIANOS.PAGO_NUMERO AS INT START WITH 46410 INCREMENT BY 1;
/**********/
/* TABLAS */
/**********/

CREATE TABLE GDDIANOS.PERSONA
(
		PERS_ID INT IDENTITY(1,1) PRIMARY KEY,
		PERS_TELEFONO NUMERIC (18,0) UNIQUE NOT NULL,
		PERS_NOMBRE VARCHAR(255) NOT NULL,
		PERS_APELLIDO VARCHAR(255) NOT NULL,
		PERS_DNI NUMERIC(18,0) UNIQUE NOT NULL,
		PERS_DIRECCION VARCHAR(255) NOT NULL UNIQUE,
		PERS_FECHA_NACIM DATETIME NULL,
		PERS_ESTADO BIT NOT NULL DEFAULT 1,
		PERS_MAIL VARCHAR(255) DEFAULT 'SIN EMAIL',
		
);

CREATE TABLE GDDIANOS.CHOFER
(
	CHOF_PERS_ID INT NOT NULL PRIMARY KEY

	CONSTRAINT FK_CHOFER_PERSONA FOREIGN KEY(CHOF_PERS_ID) REFERENCES  GDDIANOS.PERSONA(PERS_ID)
);

CREATE TABLE GDDIANOS.CLIENTE
(
	CLIE_PERS_ID INT NOT NULL PRIMARY KEY,
	CLIE_COD_POSTAL VARCHAR(8) DEFAULT '1'
	CONSTRAINT FK_CLIENTE_PERSONA FOREIGN KEY(CLIE_PERS_ID) REFERENCES  GDDIANOS.PERSONA(PERS_ID)
);


CREATE TABLE GDDIANOS.USUARIO
(
		USUA_USERNAME VARCHAR(50) NOT NULL PRIMARY KEY,
		USUA_PASSWORD VARBINARY(32) NOT NULL,
		USUA_CANTIDAD_INTENTOS INT NOT NULL DEFAULT 0,
		USUA_ESTADO BIT NOT NULL DEFAULT 1,
		USUA_PERS_ID INT,
		
		CONSTRAINT FK_USUARIO_PERSONA FOREIGN KEY(USUA_PERS_ID) REFERENCES  GDDIANOS.PERSONA(PERS_ID)
);

CREATE TABLE GDDIANOS.ROL
(	
	ROL_ID INT NOT NULL PRIMARY KEY,
	ROL_NOMBRE VARCHAR(15) UNIQUE NOT NULL,
	ROL_ESTADO BIT NOT NULL DEFAULT 1
);

CREATE TABLE GDDIANOS.ROL_POR_USUARIO
(
	ROL_USUA_USERNAME VARCHAR(50) NOT NULL,
	ROL_ROL_ID INT NOT NULL
	
	CONSTRAINT PK_ROL_POR_USUARIO PRIMARY KEY (ROL_USUA_USERNAME,ROL_ROL_ID),
	CONSTRAINT FK_USUARIO_ROL_USUARIO FOREIGN KEY (ROL_USUA_USERNAME) REFERENCES GDDIANOS.USUARIO(USUA_USERNAME),
	CONSTRAINT FK_USUARIO_ROL_ROL FOREIGN KEY (ROL_ROL_ID) REFERENCES GDDIANOS.ROL(ROL_ID)

);

CREATE TABLE GDDIANOS.FUNCIONALIDAD
(
	FUNCIONALIDAD_ID INT NOT NULL PRIMARY KEY,
	DESCRIPCION VARCHAR(255) NOT NULL
);

CREATE TABLE GDDIANOS.FUNCIONALIDAD_POR_ROL
(
	FUNC_ROL_ID INT NOT NULL,
	FUNC_ID INT NOT NULL,
	
	CONSTRAINT PK_FUNCIONALIDAD_POR_ROL_ROL PRIMARY KEY (FUNC_ROL_ID,FUNC_ID),
	CONSTRAINT FK_FUNCIONALIDAD_POR_ROL_ROL FOREIGN KEY (FUNC_ROL_ID) REFERENCES GDDIANOS.ROL(ROL_ID),
	CONSTRAINT FK_FUNCIONALIDAD_POR_ROL_FUNCIONALIDAD FOREIGN KEY (FUNC_ID) REFERENCES GDDIANOS.FUNCIONALIDAD(FUNCIONALIDAD_ID)
);



CREATE TABLE GDDIANOS.TURNO
(
	TURNO_ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	TURNO_HORA_INICIO NUMERIC(18,0) NOT NULL,
	TURNO_HORA_FIN NUMERIC(18,0) NOT NULL,
	TURNO_DESCRIPCION VARCHAR(255) NOT NULL,
	TURNO_VALOR_KM NUMERIC(18,2) NOT NULL,
	TURNO_PRECIO_BASE NUMERIC(18,2) NOT NULL,
	TURNO_ESTADO BIT NOT NULL DEFAULT 1
	
	
);


CREATE TABLE GDDIANOS.MARCA
(
	MARCA_NOMBRE VARCHAR(32) PRIMARY KEY NOT NULL
);

CREATE TABLE GDDIANOS.MODELO
(
	MODE_CODIGO VARCHAR(255) PRIMARY KEY, 
	MODE_MARCA VARCHAR(32) NOT NULL,
	
	CONSTRAINT FK_MODE_MARCA FOREIGN KEY (MODE_MARCA) REFERENCES GDDIANOS.MARCA(MARCA_NOMBRE),

);

CREATE TABLE GDDIANOS.COCHE
(
	COCHE_PATENTE VARCHAR(10) NOT NULL PRIMARY KEY,
	COCHE_LICENCIA VARCHAR(26) NOT NULL,
	COCHE_ESTADO BIT NOT NULL DEFAULT 1,
	COCHE_MARCA_NOMBRE VARCHAR(32) NOT NULL,
	COCHE_MODELO_CODIGO VARCHAR(255) NOT NULL,
	COCHE_RODADO VARCHAR(10),
	COCHE_CHOFER INT NOT NULL,
	
	CONSTRAINT FK_COCHE_MARCA_ID FOREIGN KEY (COCHE_MARCA_NOMBRE) REFERENCES GDDIANOS.MARCA(MARCA_NOMBRE),
	CONSTRAINT FK_COCHE_MODELO_CODIGO FOREIGN KEY (COCHE_MODELO_CODIGO) REFERENCES GDDIANOS.MODELO(MODE_CODIGO),
	CONSTRAINT FK_COCHE_CHOFER FOREIGN KEY (COCHE_CHOFER) REFERENCES GDDIANOS.CHOFER(CHOF_PERS_ID),
	);

CREATE TABLE GDDIANOS.VIAJE
(
	VIAJE_ID INT IDENTITY(1,1) PRIMARY KEY,
	VIAJE_TURNO_ID INT NOT NULL,
	VIAJE_FECHA DATE NOT NULL,
	VIAJE_HORA_INICIO TIME NOT NULL,
	VIAJE_HORA_FIN TIME NOT NULL,
	VIAJE_CANTIDAD_KM FLOAT NOT NULL,
	VIAJE_CHOF_PERS_ID INT NOT NULL,
	VIAJE_CLIENTE_PERS_ID INT NOT NULL,
	
	CONSTRAINT FK_VIAJE_TURNO FOREIGN KEY (VIAJE_TURNO_ID) REFERENCES GDDIANOS.TURNO(TURNO_ID),
	CONSTRAINT FK_VIAJE_PERSONA_CHOFER FOREIGN KEY (VIAJE_CHOF_PERS_ID) REFERENCES GDDIANOS.CHOFER(CHOF_PERS_ID),
	CONSTRAINT FK_VIAJE_PERSONA_CLIENTE FOREIGN KEY (VIAJE_CLIENTE_PERS_ID) REFERENCES GDDIANOS.CLIENTE(CLIE_PERS_ID)
);

CREATE TABLE GDDIANOS.FACTURA
(
	FACT_ID INT PRIMARY KEY NOT NULL,
	FACT_FECHA_GENERADA DATETIME NOT NULL,
	FACT_FECHA_INICIO DATETIME NOT NULL,
	FACT_FECHA_FIN DATETIME NOT NULL,
	FACT_IMPORTE_TOTAL DECIMAL(18,2) NOT NULL,
	FACT_PERS_ID INT NOT NULL,

	CONSTRAINT FK_FACTURA_PERSONA FOREIGN KEY (FACT_PERS_ID) REFERENCES GDDIANOS.CLIENTE(CLIE_PERS_ID)	
);

CREATE TABLE GDDIANOS.ITEM_FACTURA
(
	ITEM_FACT_ID INT NOT NULL,
	ITEM_VIAJE_ID INT UNIQUE NOT NULL,
	ITEM_PRECIO_UNIT DECIMAL(18,2) NOT NULL

	CONSTRAINT FK_ITEM_FACT_ID FOREIGN KEY (ITEM_FACT_ID) REFERENCES GDDIANOS.FACTURA(FACT_ID),
	CONSTRAINT FK_ITEM_VIAJE_ID FOREIGN KEY (ITEM_VIAJE_ID) REFERENCES GDDIANOS.VIAJE(VIAJE_ID),
	CONSTRAINT PK_ITEM_FACTURA PRIMARY KEY(ITEM_FACT_ID,ITEM_VIAJE_ID),
);

CREATE TABLE GDDIANOS.PAGO
(
	PAGO_FECHA DATETIME NOT NULL,
	PAGO_PERS_ID INT NOT NULL,
	PAGO_TURNO_ID INT NOT NULL,
	PAGO_NUMERO INT UNIQUE NOT NULL, 
	PAGO_IMPORTE_TOTAL DECIMAL(18,2) NOT NULL,
	PAGO_PORCENTAJE DECIMAL(18,2) NOT NULL,
	
	CONSTRAINT FK_PAGO_PERSONA FOREIGN KEY (PAGO_PERS_ID) REFERENCES GDDIANOS.CHOFER(CHOF_PERS_ID),
	CONSTRAINT FK_PAGO_TURNO_ID FOREIGN KEY (PAGO_TURNO_ID) REFERENCES GDDIANOS.TURNO(TURNO_ID),
	CONSTRAINT PK_PAGO PRIMARY KEY(PAGO_FECHA,PAGO_PERS_ID,PAGO_TURNO_ID) 
);

CREATE TABLE GDDIANOS.ITEM_PAGO
(
	ITEM_PAGO_NUMERO INT NOT NULL,	
	ITEM_PAGO_VIAJE_ID INT UNIQUE NOT NULL,
	ITEM_PAGO_VIAJE_IMPORTE DECIMAL(18,2) NOT NULL

	CONSTRAINT FK_ITEM_PAGO_NUMERO FOREIGN KEY (ITEM_PAGO_NUMERO) REFERENCES GDDIANOS.PAGO(PAGO_NUMERO),
	CONSTRAINT FK_ITEM_PAGO_VIAJE_ID FOREIGN KEY (ITEM_PAGO_VIAJE_ID) REFERENCES GDDIANOS.VIAJE(VIAJE_ID),
	CONSTRAINT PK_ITEM_PAGO PRIMARY KEY(ITEM_PAGO_NUMERO,ITEM_PAGO_VIAJE_ID)
);

CREATE TABLE GDDIANOS.TURNO_POR_COCHE
(
	TURNO_COCHE_PATENTE VARCHAR(10) NOT NULL,
	TURNO_TURNO_ID INT NOT NULL,

	CONSTRAINT FK_TURNO_COCHE FOREIGN KEY (TURNO_COCHE_PATENTE) REFERENCES GDDIANOS.COCHE(COCHE_PATENTE),
	CONSTRAINT FK_TURNO_TURNO FOREIGN KEY (TURNO_TURNO_ID) REFERENCES GDDIANOS.TURNO(TURNO_ID),
	CONSTRAINT PK_TURNO_POR_COCHE PRIMARY KEY (TURNO_COCHE_PATENTE, TURNO_TURNO_ID)
);

/**********/
/* TABLAS */
/**********/

CREATE TYPE GDDIANOS.FUNC_TABLETYPE AS TABLE(
FUNCIONALIDAD_ID INT);


CREATE TYPE GDDIANOS.ITEM_VIAJES_TABLETYPE AS TABLE
(ITEM_VIAJE_ID INT);



/**************/
/* PROCEDURES */
/**************/

/*
GO
CREATE PROCEDURE GDDIANOS.SHOW_LISTADO(@TIPO_CONSULTA INT,@ANIO INT,@TRIMESTRE INT) AS
BEGIN
		IF(@TIPO_CONSULTA=1)
		BEGIN
			--CHOFERES CON MAYOR RECAUDACION este esta como antes, no lo toque
			SELECT TOP 5 PERS_NOMBRE 'Chofer Nombre',PERS_APELLIDO 'Chofer Apellido',PERS_DNI 'Chofer DNI',sum(PAGO_IMPORTE_TOTAL) 'Recaudacion Chofer'
				FROM GDDIANOS.PERSONA 
				JOIN GDDIANOS.PAGO ON PERS_ID=PAGO_PERS_ID 
				WHERE GDDIANOS.CALCULAR_TRIMESTRE(PAGO_FECHA)=@TRIMESTRE 
					AND YEAR(PAGO_FECHA)=@ANIO
					and (PERS_TIPO=1 or PERS_TIPO=2)
				group by PERS_NOMBRE , PERS_APELLIDO , PERS_DNI 
				order by sum(PAGO_IMPORTE_TOTAL) desc
		END
		IF(@TIPO_CONSULTA=2)
		BEGIN
			--CHOFERES CON EL VIAJE MAS LARGO REALIZADO, este creo que esta listo
			SELECT TOP 5 PERS_NOMBRE 'Chofer Nombre',PERS_APELLIDO 'Chofer Apellido',PERS_DNI 'Chofer DNI',  (VIAJE_CANTIDAD_KM) 'KM'
				FROM GDDIANOS.PERSONA P JOIN GDDIANOS.VIAJE ON PERS_ID=VIAJE_CHOF_PERS_ID
					WHERE GDDIANOS.CALCULAR_TRIMESTRE(VIAJE_FECHA)=@TRIMESTRE
						AND YEAR(VIAJE_FECHA)=@ANIO AND (PERS_TIPO=2 OR PERS_ID=1)
					GROUP BY PERS_APELLIDO,PERS_NOMBRE,PERS_DNI,VIAJE_CANTIDAD_KM
					ORDER BY (VIAJE_CANTIDAD_KM) DESC
		END
		IF(@TIPO_CONSULTA=3)
		BEGIN
			--CLIENTES CON MAYOR CONSUMO
			SELECT TOP 5 PERS_NOMBRE 'Cliente Nombre', PERS_APELLIDO 'Cliente Apellido', PERS_DNI 'Cliente DNI',
				sum(fact_importe_total) 'Cliente Consumo'
				FROM GDDIANOS.PERSONA JOIN GDDIANOS.FACTURA ON FACT_PERS_ID=PERS_ID
				WHERE (GDDIANOS.CALCULAR_TRIMESTRE(FACT_FECHA_INICIO)) = @TRIMESTRE AND YEAR(FACT_FECHA_INICIO) = @ANIO AND (PERS_TIPO = 3 OR PERS_TIPO = 1 )
				GROUP BY PERS_NOMBRE, PERS_APELLIDO, PERS_DNI
				ORDER BY sum(fact_importe_total) DESC
		END
		IF(@TIPO_CONSULTA=4)
		BEGIN
			--CLIENTE QUE UTILIZO MAS VECES EL MISMO AUTOMOVIL EN LOS VIAJES QUE HA REALIZADO
			SELECT TOP 5 P1.PERS_NOMBRE 'Cliente Nombre', P1.PERS_APELLIDO 'Cliente Apellido', P1.PERS_DNI 'Cliente DNI', COCHE_PATENTE 'Automovil', COUNT((V1.VIAJE_ID)) 'Cantidad viajes'
				FROM (GDDIANOS.VIAJE V1 JOIN GDDIANOS.PERSONA P1 ON (V1.VIAJE_CLIENTE_PERS_ID = PERS_ID)) JOIN 
					 (GDDIANOS.VIAJE V2 JOIN GDDIANOS.COCHE ON (V2.VIAJE_CHOF_PERS_ID = COCHE_CHOFER)) ON (V1.VIAJE_ID = V2.VIAJE_ID)
				WHERE V1.VIAJE_CHOF_PERS_ID = COCHE_CHOFER AND COCHE_ESTADO = 1
					AND GDDIANOS.CALCULAR_TRIMESTRE(V1.VIAJE_FECHA)=@TRIMESTRE AND YEAR(V1.VIAJE_FECHA)=@ANIO AND (PERS_TIPO = 3 OR PERS_TIPO = 1 )
				GROUP BY P1.PERS_NOMBRE, P1.PERS_APELLIDO, P1.PERS_DNI, COCHE_PATENTE
				ORDER BY COUNT((V1.VIAJE_ID)) desc
		END
END
*/
GO
CREATE PROCEDURE GDDIANOS.GET_ROLES_USUARIO(@USUARIO VARCHAR(255)) AS
BEGIN
	SELECT R.ROL_NOMBRE,R.ROL_ID FROM GDDIANOS.ROL R
	INNER JOIN GDDIANOS.ROL_POR_USUARIO RU ON RU.ROL_ROL_ID=R.ROL_ID
	INNER JOIN GDDIANOS.USUARIO U ON U.USUA_USERNAME=RU.ROL_USUA_USERNAME
	WHERE U.USUA_ESTADO=1 AND U.USUA_USERNAME=@USUARIO
	return 1
END;

GO
CREATE PROCEDURE GDDIANOS.EXISTE_USUARIO(@USUARIO VARCHAR(255)) AS
BEGIN
	DECLARE @CANTIDAD INT
	
	SELECT @CANTIDAD = COUNT(USUA_USERNAME) FROM GDDIANOS.USUARIO
	WHERE USUA_USERNAME = @USUARIO AND
		  USUA_ESTADO = 1
	
	RETURN @CANTIDAD
END;

GO
CREATE PROCEDURE GDDIANOS.GET_ROLES_USUARIO_POR_ID(@ID INT, @TIPO INT)
AS
BEGIN

	SELECT ROL_USUA_USERNAME, ROL_ROL_ID
	FROM GDDIANOS.ROL_POR_USUARIO JOIN GDDIANOS.USUARIO ON USUA_USERNAME = ROL_USUA_USERNAME
	JOIN GDDIANOS.PERSONA ON PERS_ID = USUA_PERS_ID
	WHERE PERS_ID = @ID AND ROL_ROL_ID = @TIPO
	
	
END;
GO
CREATE PROCEDURE GDDIANOS.CAMBIAR_PASSWORD(@USUARIO VARCHAR(255),@PASSWORD VARCHAR(64)) AS
BEGIN
  DECLARE @HASH_PASS VARBINARY(32)
  SET @HASH_PASS = CONVERT(VARBINARY(32),HASHBYTES('SHA2_256',CONVERT(VARCHAR(32),@PASSWORD)))

  UPDATE GDDIANOS.USUARIO SET USUA_PASSWORD=@HASH_PASS WHERE USUA_USERNAME=@USUARIO

END;

GO
CREATE PROCEDURE GDDIANOS.PASSWORD_CORRECTA(@USUARIO VARCHAR(255),@PASSWORD VARCHAR(64)) AS
BEGIN
	DECLARE @HASH_PASS VARBINARY(32), @CANTIDAD INT
	SET @HASH_PASS = CONVERT(VARBINARY(32), @PASSWORD, 2)

	SELECT @CANTIDAD = COUNT(USUA_USERNAME) FROM GDDIANOS.USUARIO
	WHERE USUA_ESTADO = 1 AND
		  USUA_USERNAME = @USUARIO AND
		  USUA_PASSWORD = @HASH_PASS

	RETURN @CANTIDAD
END

GO
CREATE PROCEDURE GDDIANOS.GET_FUNCIONALIDADES_ROL(@ROL_ID INT) AS
BEGIN
	SELECT FUNCIONALIDAD_ID AS ID, DESCRIPCION AS Funcionalidad FROM GDDIANOS.FUNCIONALIDAD_POR_ROL, GDDIANOS.FUNCIONALIDAD
	WHERE FUNC_ROL_ID = @ROL_ID AND
		  FUNC_ID = FUNCIONALIDAD_ID
END

GO
create procedure GDDIANOS.GET_FUNCIONALIDADES_POR_ROL (@ID int)
AS
BEGIN
RETURN (
	SELECT FUNCIONALIDAD_ID
	FROM  GDDIANOS.FUNCIONALIDAD JOIN  GDDIANOS.FUNCIONALIDAD_POR_ROL ON (FUNCIONALIDAD_ID = FUNC_ID)
	JOIN  GDDIANOS.ROL ON (FUNC_ROL_ID = ROL_ID)
	WHERE ROL_ID = @ID)
END;

GO
CREATE PROCEDURE GDDIANOS.GET_FUNCIONALIDADES   AS
BEGIN
	SELECT FUNCIONALIDAD_ID AS ID, DESCRIPCION AS Funcionalidad FROM GDDIANOS.FUNCIONALIDAD 
END;

GO
CREATE PROCEDURE GDDIANOS.FIND_CLIENTE(@NOMBRE VARCHAR(255) = NULL,@APELLIDO VARCHAR(255) = NULL, 
	@DOC VARCHAR(18) = NULL) AS
BEGIN
	SELECT PERS_ID AS ID, PERS_DNI AS Numero, 
	PERS_NOMBRE AS Nombre, PERS_APELLIDO AS Apellido, PERS_FECHA_NACIM AS 'Fecha Nacimiento'
	FROM GDDIANOS.PERSONA 
	JOIN GDDIANOS.CLIENTE ON PERS_ID=CLIE_PERS_ID
	WHERE (@NOMBRE IS NULL OR PERS_NOMBRE LIKE '%' + @NOMBRE + '%') AND
		  (@APELLIDO IS NULL OR PERS_APELLIDO LIKE '%' + @APELLIDO + '%') AND
		  (@DOC IS NULL OR PERS_DNI LIKE '%' + @DOC + '%')
		   
		  
END;

GO
CREATE PROCEDURE GDDIANOS.FIND_CHOFER(@NOMBRE VARCHAR(255) = NULL,@APELLIDO VARCHAR(255) = NULL, 
	@DOC VARCHAR(18) = NULL) AS
BEGIN
	SELECT PERS_ID AS ID, PERS_DNI AS Numero, 
	PERS_NOMBRE AS Nombre, PERS_APELLIDO AS Apellido, PERS_FECHA_NACIM AS 'Fecha Nacimiento'
	FROM GDDIANOS.PERSONA 
	JOIN GDDIANOS.CHOFER ON PERS_ID=CHOF_PERS_ID
	WHERE (@NOMBRE IS NULL OR PERS_NOMBRE LIKE '%' + @NOMBRE + '%') AND
		  (@APELLIDO IS NULL OR PERS_APELLIDO LIKE '%' + @APELLIDO + '%') AND
		  (@DOC IS NULL OR PERS_DNI LIKE '%' + @DOC + '%') 
END;

GO
CREATE PROCEDURE GDDIANOS.FIND_CLIENTE_ACTIVO (@NOMBRE VARCHAR(255) = NULL,@APELLIDO VARCHAR(255) = NULL, 
	@DOC VARCHAR(18) = NULL, @TIPO INT, @TIPOAMBOS INT) AS
BEGIN
	SELECT PERS_ID AS ID, PERS_DNI AS Numero, 
	PERS_NOMBRE AS Nombre, PERS_APELLIDO AS Apellido, PERS_FECHA_NACIM AS 'Fecha Nacimiento'
	FROM GDDIANOS.PERSONA 
	JOIN GDDIANOS.CLIENTE ON PERS_ID=CLIE_PERS_ID
	WHERE (@NOMBRE IS NULL OR PERS_NOMBRE LIKE '%' + @NOMBRE + '%') AND
		  (@APELLIDO IS NULL OR PERS_APELLIDO LIKE '%' + @APELLIDO + '%') AND
		  (@DOC IS NULL OR PERS_DNI LIKE '%' + @DOC + '%') AND
		  PERS_ESTADO = 1		  
		  
END;

GO
CREATE PROCEDURE GDDIANOS.FIND_CHOFER_ACTIVO (@NOMBRE VARCHAR(255) = NULL,@APELLIDO VARCHAR(255) = NULL, 
	@DOC VARCHAR(18) = NULL, @TIPO INT, @TIPOAMBOS INT) AS
BEGIN
	SELECT PERS_ID AS ID, PERS_DNI AS Numero, 
	PERS_NOMBRE AS Nombre, PERS_APELLIDO AS Apellido, PERS_FECHA_NACIM AS 'Fecha Nacimiento'
	FROM GDDIANOS.PERSONA 
	JOIN GDDIANOS.CHOFER ON PERS_ID=CHOF_PERS_ID
	WHERE (@NOMBRE IS NULL OR PERS_NOMBRE LIKE '%' + @NOMBRE + '%') AND
		  (@APELLIDO IS NULL OR PERS_APELLIDO LIKE '%' + @APELLIDO + '%') AND
		  (@DOC IS NULL OR PERS_DNI LIKE '%' + @DOC + '%') AND
		  PERS_ESTADO = 1		  
		  
END;

GO 
CREATE PROCEDURE GDDIANOS.BAJA_PERSONA (@ID INT, @TIPO INT)
AS 
BEGIN
	
	DECLARE @USER VARCHAR(50)

	SELECT @USER = USUA_USERNAME
	FROM GDDIANOS.USUARIO JOIN GDDIANOS.PERSONA ON (PERS_ID = USUA_PERS_ID)
	WHERE PERS_ID = @ID

	DELETE GDDIANOS.ROL_POR_USUARIO WHERE (ROL_USUA_USERNAME = @USER AND ROL_ROL_ID = @TIPO)
	UPDATE GDDIANOS.PERSONA SET PERS_ESTADO=0 WHERE PERS_ID=@ID
END
/*
GO
CREATE PROCEDURE GDDIANOS.MODIFICAR_PERSONA (@ID INT,@TELEFONO INT, @NOMBRE VARCHAR(255),
@APELLIDO VARCHAR(255),@DNI NUMERIC(18,0), @DIRECCION VARCHAR(255), @FECHA DATETIME,
@MAIL VARCHAR(255), @ESTADO INT, @COD VARCHAR(8), @TIPO INT)
AS
BEGIN
	
	DECLARE @USER VARCHAR(50)

	UPDATE GDDIANOS.PERSONA
	SET PERS_TELEFONO = @TELEFONO, PERS_NOMBRE = @NOMBRE, PERS_APELLIDO = @APELLIDO,
	PERS_DNI = @DNI, PERS_DIRECCION = @DIRECCION, PERS_FECHA_NACIM = @FECHA,
	PERS_ESTADO = @ESTADO, PERS_MAIL = @MAIL, PERS_TIPO = PERS_TIPO, PERS_COD_POSTAL = @COD
	WHERE (PERS_ID = @ID)
	
	IF (@ESTADO = 1)
	BEGIN
	SET @USER = (SELECT USUA_USERNAME
	FROM GDDIANOS.USUARIO JOIN GDDIANOS.PERSONA ON (PERS_ID = USUA_PERS_ID)
	WHERE PERS_ID = @ID)

	INSERT GDDIANOS.ROL_POR_USUARIO VALUES (@USER, @TIPO)
	END

END
*/
GO
CREATE PROCEDURE GDDIANOS.setIntentosCero(@USUARIO VARCHAR(255)) AS
BEGIN
	UPDATE GDDIANOS.USUARIO SET USUA_CANTIDAD_INTENTOS=0 WHERE USUA_USERNAME=@USUARIO
END;

GO

CREATE PROCEDURE GDDIANOS.sumarIntentoLogin(@USUARIO VARCHAR(255)) AS
BEGIN
	DECLARE @INTENTOS INT
	SELECT @INTENTOS=USUA_CANTIDAD_INTENTOS FROM GDDIANOS.USUARIO
	IF(@INTENTOS<2)
	BEGIN
	UPDATE GDDIANOS.USUARIO SET USUA_CANTIDAD_INTENTOS=@INTENTOS+1;  
	END ELSE
	BEGIN
	  UPDATE GDDIANOS.USUARIO SET USUA_CANTIDAD_INTENTOS=3,USUA_ESTADO=0 
	END;
END;

GO
CREATE PROCEDURE GDDIANOS.GET_TELEFONO(@TELEFONO INT, @ID INT) AS
BEGIN
	DECLARE @CANT INT

	SELECT @CANT = COUNT(*)
	FROM GDDIANOS.PERSONA PERSONAS
	WHERE PERSONAS.PERS_TELEFONO = @TELEFONO AND PERSONAS.PERS_DNI != @ID

	IF @CANT = 0
		RETURN 0
	ELSE
		RETURN 1
END

GO
CREATE PROCEDURE GDDIANOS.GET_PERSONA(@ID INT) AS
BEGIN
	SELECT * FROM GDDIANOS.PERSONA PERSONAS
	WHERE PERSONAS.PERS_ID = @ID 
END
/*
GO
CREATE PROCEDURE GDDIANOS.GET_TIPO_POR_DNI(@DNI INT) AS
BEGIN

	SELECT PERS_TIPO
	FROM GDDIANOS.PERSONA PERSONAS
	WHERE PERSONAS.PERS_DNI = @DNI

END


GO
CREATE PROCEDURE GDDIANOS.ACTUALIZAR_PERSONA(@DNI NUMERIC (18,0), @TIPO INT,
													@COD VARCHAR(8),@ROL INT)
AS
BEGIN
	DECLARE @USUA VARCHAR(50)
		SELECT @USUA = USUA_USERNAME 
		FROM GDDIANOS.PERSONA JOIN GDDIANOS.USUARIO ON (PERS_ID = USUA_PERS_ID)
		WHERE PERS_DNI = @DNI
	
	UPDATE GDDIANOS.PERSONA SET PERS_TIPO  = @TIPO, PERS_COD_POSTAL = @COD WHERE(PERS_DNI = @DNI);
	INSERT GDDIANOS.ROL_POR_USUARIO VALUES (@USUA, @ROL);
END;

GO
CREATE PROCEDURE GDDIANOS.ALTA_PERSONA (@TELEFONO NUMERIC(18,0), @NOMBRE VARCHAR(255),
@APELLIDO VARCHAR(255),@DNI NUMERIC(18,0),@FECHA DATETIME,@DIRECCION VARCHAR(255),
@MAIL VARCHAR(255),@COD VARCHAR(8), @TIPO INT)
AS
BEGIN
	
	INSERT GDDIANOS.PERSONA VALUES (@TELEFONO,@NOMBRE,@APELLIDO,@DNI,@DIRECCION,@FECHA,1,@MAIL,@TIPO,@COD)

END
*/
GO
CREATE PROCEDURE GDDIANOS.GET_PERSONA_POR_DNI(@DNI INT) AS
BEGIN
	SELECT PERS_ID
	FROM GDDIANOS.PERSONA PERSONAS
	WHERE PERSONAS.PERS_DNI = @DNI
END


GO
CREATE PROCEDURE GDDIANOS.GET_MODELOS (@MARCA VARCHAR(32))
AS
BEGIN
	SELECT COCHE_MODELO_CODIGO
	FROM GDDIANOS.COCHE
	WHERE COCHE_MARCA_NOMBRE = @MARCA
	RETURN 1
END

GO
CREATE PROCEDURE GDDIANOS.GET_PATENTES (@MODELO VARCHAR(255))
AS
BEGIN
	SELECT COCHE_PATENTE
	FROM GDDIANOS.COCHE
	WHERE COCHE_MODELO_CODIGO = @MODELO
	RETURN 1
END

GO
CREATE PROCEDURE GDDIANOS.GET_MARCAS
AS
BEGIN
	SELECT MARCA_NOMBRE
	FROM GDDIANOS.MARCA
	RETURN 1
END

GO
CREATE PROCEDURE GDDIANOS.GET_ESTADO_CHOFER (@PATENTE VARCHAR(10))
AS
BEGIN
	SELECT COCHE_ESTADO, PERS_NOMBRE ++ ' ' ++ PERS_APELLIDO PERSONA, PERS_DNI
	FROM GDDIANOS.COCHE JOIN GDDIANOS.PERSONA ON (COCHE_CHOFER = PERS_ID)
	JOIN GDDIANOS.CHOFER ON CHOF_PERS_ID=PERS_ID
	WHERE COCHE_PATENTE = @PATENTE
END

GO
CREATE PROCEDURE GDDIANOS.GET_ROLES AS
BEGIN
 SELECT DISTINCT ROL_NOMBRE,ROL_ID, ROL_ESTADO FROM GDDIANOS.ROL 
 return 1
END;

GO
CREATE PROCEDURE GDDIANOS.FIND_ROL(@NOMBRE VARCHAR(15) = NULL) AS
BEGIN
	SELECT UPPER(ROL_NOMBRE)
	FROM GDDIANOS.ROL
	WHERE (@NOMBRE IS NULL OR ROL_NOMBRE LIKE UPPER(@NOMBRE))
END;

GO
CREATE PROCEDURE GDDIANOS.ALTA_ROL(@NOMBRE VARCHAR(15),@FUNCIONALIDADES GDDIANOS.FUNC_TABLETYPE READONLY, @ESTADO INT) AS
BEGIN
INSERT INTO GDDIANOS.ROL (ROL_ID,ROL_NOMBRE,ROL_ESTADO) VALUES ((SELECT MAX(ROL_ID)+1 FROM GDDIANOS.ROL), @NOMBRE, @ESTADO)
INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL (FUNC_ROL_ID,FUNC_ID) (SELECT MAX(ROL_ID),FUNCIONALIDAD_ID FROM GDDIANOS.ROL,@FUNCIONALIDADES GROUP BY FUNCIONALIDAD_ID)
END

GO
CREATE PROCEDURE GDDIANOS.BAJA_ROL(@NOMBRE VARCHAR(50), @ROLID INT) 
AS 	
BEGIN
	SELECT ROL_NOMBRE, ROL_ID 
	FROM GDDIANOS.ROL 
	WHERE ROL_NOMBRE = @NOMBRE AND ROL_ID = @ROLID
END
BEGIN
	UPDATE GDDIANOS.ROL SET ROL_ESTADO = 0 WHERE ROL_NOMBRE = @NOMBRE AND ROL_ID = @ROLID
END  
BEGIN	
	DELETE	
	FROM GDDIANOS.ROL_POR_USUARIO 
	WHERE ROL_ROL_ID = @ROLID
END

GO
CREATE PROCEDURE GDDIANOS.GET_ROL_POR_NOMBRE (@NOMBRE VARCHAR(50))   AS
BEGIN
	SELECT ROL_NOMBRE,ROL_ID, ROL_ESTADO FROM GDDIANOS.ROL 
	WHERE ROL_NOMBRE = @NOMBRE

END;

GO
CREATE PROCEDURE GDDIANOS.MODIFICAR_AUTOMOVIL_POR_PATENTE (@PATENTE VARCHAR(10), @ESTADO INT, @CHOFER INT)
AS
BEGIN

	DECLARE @IDCHOFER INT
	SET @IDCHOFER = (SELECT PERS_ID FROM PERSONA WHERE PERS_DNI = @CHOFER)
	UPDATE GDDIANOS.COCHE SET COCHE_ESTADO = @ESTADO, COCHE_CHOFER = @IDCHOFER WHERE COCHE_PATENTE = @PATENTE

END

GO
CREATE PROCEDURE GDDIANOS.CHOFER_ASIGNADO (@CHOFER INT, @PATENTE VARCHAR(10))
AS
BEGIN
SELECT COCHE_PATENTE
FROM GDDIANOS.COCHE JOIN GDDIANOS.PERSONA ON (COCHE_CHOFER = PERS_ID)
WHERE COCHE_CHOFER = @CHOFER
END

GO
CREATE PROCEDURE GDDIANOS.ALTA_AUTOMOVIL (@MARCA VARCHAR(32), @MODELO VARCHAR(255), @PATENTE VARCHAR(10), @CHOFER INT, @ESTADO BIT)
AS
BEGIN

	DECLARE @IDCHOFER INT

	SET @IDCHOFER = (SELECT PERS_ID FROM PERSONA WHERE PERS_DNI = @CHOFER)

	INSERT GDDIANOS.COCHE VALUES (@PATENTE,'A',@ESTADO,@MARCA,@MODELO,'A',@IDCHOFER);
END

GO
CREATE PROCEDURE GDDIANOS.GET_AUTOMOVIL_POR_PATENTE (@PATENTE VARCHAR(10))
AS
BEGIN
SELECT COCHE_PATENTE
FROM GDDIANOS.COCHE
WHERE COCHE_PATENTE = @PATENTE
END

GO
CREATE PROCEDURE GDDIANOS.BAJA_AUTOMOVIL_POR_PATENTE (@PATENTE VARCHAR(10))
AS
BEGIN
	UPDATE GDDIANOS.COCHE SET COCHE_ESTADO = 0 WHERE COCHE_PATENTE = @PATENTE
END

GO
CREATE PROCEDURE GDDIANOS.ALTA_TURNO (@DESCRIPCION VARCHAR(255), @HI NUMERIC(18,0), @HF NUMERIC(18,0), @VALOR NUMERIC(18,2), @PRECIO NUMERIC(18,2))
AS
BEGIN
	DECLARE @CANT INT
	
	SELECT @CANT = COUNT(*) FROM GDDIANOS.TURNO 
	WHERE (TURNO_ESTADO = 1) AND 
	( ((@HI BETWEEN TURNO_HORA_INICIO AND TURNO_HORA_FIN) AND	(@HF BETWEEN TURNO_HORA_INICIO AND TURNO_HORA_FIN)) OR
	((TURNO_HORA_INICIO BETWEEN @HI AND @HF) AND (TURNO_HORA_FIN BETWEEN @HI AND @HF)) )
	AND (@HI != TURNO_HORA_FIN) AND (@HF != TURNO_HORA_INICIO)

	IF (@CANT = 0)
	BEGIN
		INSERT GDDIANOS.TURNO VALUES (@HI,@HF,@DESCRIPCION,@VALOR,@PRECIO,1)
		RETURN 1
	END
	ELSE
	BEGIN
		RETURN 0
	END
END

GO
CREATE PROCEDURE GDDIANOS.GET_DETALLE
AS
BEGIN
	SELECT TURNO_DESCRIPCION FROM GDDIANOS.TURNO WHERE TURNO_ESTADO = 1
	RETURN 1
END

GO
CREATE PROCEDURE GDDIANOS.GET_HORARIOS (@DESCRIPCION VARCHAR(255))
AS
BEGIN
	SELECT * FROM GDDIANOS.TURNO WHERE TURNO_DESCRIPCION = @DESCRIPCION 
END

GO
CREATE PROCEDURE GDDIANOS.GET_HORA_FIN (@DESCRIPCION VARCHAR(255))
AS
BEGIN
	SELECT TURNO_HORA_FIN FROM GDDIANOS.TURNO WHERE TURNO_DESCRIPCION = @DESCRIPCION 
	RETURN 1
END

GO
CREATE PROCEDURE GDDIANOS.BAJA_TURNO (@DESCRIPCION VARCHAR(255), @HI NUMERIC(18,0), @HF NUMERIC(18,0))
AS
BEGIN
	DECLARE @ID INT
	SET @ID = (SELECT TURNO_ID FROM GDDIANOS.TURNO WHERE @DESCRIPCION = TURNO_DESCRIPCION AND @HI = TURNO_HORA_INICIO AND @HF = TURNO_HORA_FIN)
	UPDATE GDDIANOS.TURNO SET TURNO_ESTADO = 0 WHERE (@DESCRIPCION = TURNO_DESCRIPCION AND @HI = TURNO_HORA_INICIO AND @HF = TURNO_HORA_FIN)
	DELETE GDDIANOS.TURNO_POR_COCHE WHERE (@ID = TURNO_TURNO_ID) 
END

GO
CREATE PROCEDURE GDDIANOS.FIND_TURNO_ID (@ID INT)
AS
BEGIN
	SELECT *
	FROM GDDIANOS.TURNO
	WHERE TURNO_ID = @ID
END

GO
CREATE PROCEDURE GDDIANOS.FIND_TURNO_DESCRIPCION (@DESCRIPCION VARCHAR(255))
AS
BEGIN
	
	IF(@DESCRIPCION != '')
		BEGIN
		SELECT *
		FROM GDDIANOS.TURNO
		WHERE TURNO_DESCRIPCION = @DESCRIPCION
		END
	ELSE
		BEGIN
		SELECT *
		FROM GDDIANOS.TURNO
		END
END

GO
CREATE PROCEDURE GDDIANOS.MODIFICAR_TURNO (@ID INT, @HI NUMERIC(18,0), @HF NUMERIC(18,0), @DESCRIPCION VARCHAR(255), @VALOR NUMERIC(18,2), @PRECIO NUMERIC(18,2), @ESTADO BIT)
AS
BEGIN
	DECLARE @CANT INT
	
	SELECT @CANT = COUNT(*) FROM GDDIANOS.TURNO 
	WHERE (@ID != TURNO_ID) AND (TURNO_ESTADO = 1) AND (
	((@HI BETWEEN TURNO_HORA_INICIO AND TURNO_HORA_FIN) AND	(@HF BETWEEN TURNO_HORA_INICIO AND TURNO_HORA_FIN)) OR
	((TURNO_HORA_INICIO BETWEEN @HI AND @HF) AND (TURNO_HORA_FIN BETWEEN @HI AND @HF)) )

	IF (@CANT = 0)
	BEGIN
		UPDATE GDDIANOS.TURNO SET TURNO_HORA_INICIO = @HI, TURNO_HORA_FIN = @HF, TURNO_DESCRIPCION =@DESCRIPCION, TURNO_VALOR_KM =@VALOR,
	TURNO_PRECIO_BASE = @PRECIO, TURNO_ESTADO = @ESTADO WHERE TURNO_ID = @ID
	
		RETURN 1
	END
	ELSE
	BEGIN
		RETURN 0
	END
END

GO
CREATE PROCEDURE GDDIANOS.MODIFICAR_ROL (@ID INT, @NOMBRE VARCHAR(15),
						@FUNCIONALIDADES AS GDDIANOS.FUNC_TABLETYPE READONLY , @ESTADO INT)
AS
BEGIN
	BEGIN
		UPDATE GDDIANOS.ROL SET
			ROL_NOMBRE = @NOMBRE,
			ROL_ESTADO = @ESTADO
		WHERE ROL_ID = @ID
	END
	BEGIN
	IF (@ESTADO = 0)
	DELETE	
	FROM GDDIANOS.ROL_POR_USUARIO 
	WHERE ROL_ROL_ID = @ID
	END
	BEGIN
		DELETE FROM GDDIANOS.FUNCIONALIDAD_POR_ROL --SE BORRAN TODAS LAS FUNCIONALIDADES ANTERIORES
		WHERE FUNC_ROL_ID = @ID
	END
	BEGIN
		INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL --SE INGRESAN LAS FUNCIONALIDADES MODIFICADAS COMO SI FUERAN NUEVAS
		SELECT @ID, FUNCIONALIDAD_ID FROM @FUNCIONALIDADES
	END
END

go
CREATE PROCEDURE GDDIANOS.GET_ROLES_HABILITADOS 
AS
BEGIN

 SELECT DISTINCT ROL_NOMBRE,ROL_ID, ROL_ESTADO FROM GDDIANOS.ROL 
 WHERE ROL_ESTADO = 1
 return 1
 
END
/*
GO
CREATE PROCEDURE GDDIANOS.GET_VIAJES_A_FACTURAR(@ID INT, @MES INT, @ANIO INT) AS
BEGIN
	SELECT VIAJE_ID ID,VIAJE_FECHA Fecha, TURNO_PRECIO_BASE 'Precio base',
			VIAJE_CANTIDAD_KM KM, TURNO_VALOR_KM 'Valor KM', 
			(TURNO_PRECIO_BASE + (VIAJE_CANTIDAD_KM * TURNO_VALOR_KM)) 'Precio unitario'
	FROM GDDIANOS.VIAJE VIAJE JOIN GDDIANOS.TURNO TURNO
			ON (VIAJE.VIAJE_TURNO_ID = TURNO.TURNO_ID)
	WHERE VIAJE_CLIENTE_PERS_ID = @ID AND 
			MONTH(VIAJE_FECHA) = @MES AND
			YEAR(VIAJE_FECHA) = @ANIO
	ORDER BY VIAJE_FECHA
END

GO
CREATE PROCEDURE GDDIANOS.VIAJE_YA_FACTURADO (@VIAJES GDDIANOS.ITEM_VIAJES_TABLETYPE READONLY) AS
IF EXISTS(SELECT ITEM_VIAJE_ID FROM @VIAJES WHERE ITEM_VIAJE_ID
	 IN (SELECT ITEM_VIAJE_ID FROM ITEM_FACTURA))
RETURN (0)
ELSE
RETURN (1)

GO
CREATE PROCEDURE GDDIANOS.VIAJE_YA_RENDIDO (@VIAJES GDDIANOS.ITEM_VIAJES_TABLETYPE READONLY) AS
IF EXISTS(SELECT ITEM_VIAJE_ID FROM @VIAJES WHERE ITEM_VIAJE_ID 
	IN (SELECT ITEM_PAGO_VIAJE_ID FROM ITEM_PAGO))
RETURN (0)
ELSE
RETURN (1)

GO
CREATE PROCEDURE GDDIANOS.GET_ID_FACTURA_INSERTADO AS
BEGIN
RETURN (SELECT MAX(FACT_ID) FROM GDDIANOS.FACTURA)
END;

GO
CREATE PROCEDURE GDDIANOS.CREAR_FACTURA (@ID_PERS INT, @FECHA_ACTUAL DATETIME, @FECHA_INICIO DATETIME,
	@FECHA_FINAL DATETIME, @TOTAL DECIMAL(18,2)) AS
BEGIN
	DECLARE @FACT_ID_INS INT
	SET @FACT_ID_INS= (NEXT VALUE FOR GDDIANOS.FACT_ID)
	INSERT INTO GDDIANOS.FACTURA (FACT_ID,FACT_FECHA_GENERADA,
			FACT_FECHA_INICIO,FACT_FECHA_FIN,FACT_IMPORTE_TOTAL,FACT_PERS_ID)
			VALUES (@FACT_ID_INS,@FECHA_ACTUAL, @FECHA_INICIO, @FECHA_FINAL, @TOTAL, @ID_PERS);	
END;
*/
GO
CREATE PROCEDURE GDDIANOS.GET_TURNOS AS
BEGIN
	SELECT DISTINCT TURNO_ID, TURNO_DESCRIPCION FROM GDDIANOS.TURNO 
	WHERE TURNO_ESTADO = 1
END
/*
GO
CREATE PROCEDURE GDDIANOS.GET_VIAJES_A_PAGAR(@ID_CHOF INT, @FECHA DATETIME, @ID_TURNO INT, @PORCENTAJE DECIMAL(18,2)) AS
BEGIN
	SELECT VIAJE_ID ID, TURNO_DESCRIPCION Turno, TURNO_PRECIO_BASE 'Precio base',
			VIAJE_CANTIDAD_KM KM, TURNO_VALOR_KM 'Valor KM', 
			((TURNO_PRECIO_BASE + (VIAJE_CANTIDAD_KM * TURNO_VALOR_KM))* (@PORCENTAJE/100))  'Precio unitario'
			
	FROM GDDIANOS.VIAJE VIAJE 
		JOIN GDDIANOS.TURNO TURNO ON (VIAJE.VIAJE_TURNO_ID = TURNO.TURNO_ID)		

	WHERE VIAJE_FECHA = CONVERT (DATE,@FECHA,121) 
		AND VIAJE_CHOF_PERS_ID = @ID_CHOF
		AND VIAJE_TURNO_ID = @ID_TURNO	
		--and VIAJE_ID not in(select item_pago_viaje_id from gddianos.item_pago)	
END

GO
CREATE PROCEDURE GDDIANOS.CREAR_PAGO (@FECHA DATETIME, @ID_CHOF INT, @ID_TURNO INT, 
							@TOTAL DECIMAL(18,2), @PORCENTAJE  DECIMAL(18,2)) AS
	BEGIN

	DECLARE @PAGO_ID_INS INT
	SET @PAGO_ID_INS= (NEXT VALUE FOR GDDIANOS.PAGO_NUMERO)
	
	INSERT INTO GDDIANOS.PAGO (PAGO_FECHA, PAGO_PERS_ID, PAGO_TURNO_ID,
		PAGO_NUMERO,PAGO_IMPORTE_TOTAL,PAGO_PORCENTAJE)
		VALUES ( @FECHA, @ID_CHOF, @ID_TURNO, @PAGO_ID_INS, @TOTAL, @PORCENTAJE)	
	
	INSERT INTO GDDIANOS.ITEM_PAGO 
		SELECT @PAGO_ID_INS, VIAJE_ID, 
			((TURNO_PRECIO_BASE + (VIAJE_CANTIDAD_KM * TURNO_VALOR_KM))* (@PORCENTAJE/100)) 			
	FROM GDDIANOS.VIAJE VIAJE 
		JOIN GDDIANOS.TURNO TURNO ON (VIAJE.VIAJE_TURNO_ID = TURNO.TURNO_ID)
	WHERE VIAJE_FECHA = CONVERT (DATE,@FECHA,121) 
		AND VIAJE_CHOF_PERS_ID = @ID_CHOF
		AND VIAJE_TURNO_ID = @ID_TURNO	
	
	END
	*/
GO
CREATE PROCEDURE GDDIANOS.GET_TURNO_COCHE (@PATENTE VARCHAR(10))
AS
BEGIN
	SELECT TURNO_DESCRIPCION
	FROM GDDIANOS.TURNO JOIN GDDIANOS.TURNO_POR_COCHE ON (TURNO_ID = TURNO_TURNO_ID)
	WHERE TURNO_COCHE_PATENTE = @PATENTE
END

GO
CREATE PROCEDURE GDDIANOS.FIND_TURNO_ASIGNADO_PARA_COCHE (@PATENTE VARCHAR(10))
AS
BEGIN
	SELECT TURNO_DESCRIPCION
	FROM GDDIANOS.TURNO_POR_COCHE JOIN GDDIANOS.TURNO ON (TURNO_ID = TURNO_TURNO_ID)
	WHERE TURNO_COCHE_PATENTE = @PATENTE
END

GO
CREATE PROCEDURE GDDIANOS.FIND_TURNO_NO_ASIGNADO_PARA_COCHE (@PATENTE VARCHAR(10))
AS
BEGIN
	SELECT TURNO_DESCRIPCION 
	FROM GDDIANOS.TURNO
	WHERE (TURNO_ESTADO = 1) AND (TURNO_ID NOT IN 
	(SELECT TURNO_TURNO_ID FROM GDDIANOS.TURNO_POR_COCHE WHERE TURNO_COCHE_PATENTE = @PATENTE))
END

GO
CREATE PROCEDURE GDDIANOS.INGRESAR_TURNO_AUTOMOVIL_POR_PATENTE (@PATENTE VARCHAR(10), @DETALLE VARCHAR(255))
AS
BEGIN
	DECLARE @CANT INT
	DECLARE @TURNOID INT

	SET @CANT = (SELECT COUNT(*)
	FROM GDDIANOS.TURNO JOIN GDDIANOS.TURNO_POR_COCHE ON (TURNO_ID = TURNO_TURNO_ID)
	WHERE TURNO_DESCRIPCION = @DETALLE AND TURNO_COCHE_PATENTE = @PATENTE)

	SET @TURNOID = (SELECT TURNO_ID FROM GDDIANOS.TURNO WHERE TURNO_DESCRIPCION = @DETALLE)

	IF @CANT = 0
	BEGIN
		INSERT GDDIANOS.TURNO_POR_COCHE VALUES(@PATENTE, @TURNOID)
	END

END

GO
CREATE PROCEDURE GDDIANOS.MODIFICAR_TURNO_AUTOMOVIL_POR_PATENTE (@PATENTE VARCHAR(10), @DETALLE VARCHAR(255), @ESTADO BIT)
AS
BEGIN
--	DECLARE @CANT INT
	DECLARE @TURNOID INT

--	SET @CANT = (SELECT COUNT(*)
--	FROM GDDIANOS.TURNO JOIN GDDIANOS.TURNO_POR_COCHE ON (TURNO_ID = TURNO_TURNO_ID)
--	WHERE TURNO_DESCRIPCION = @DETALLE AND TURNO_COCHE_PATENTE = @PATENTE)

	SET @TURNOID = (SELECT TURNO_ID FROM GDDIANOS.TURNO WHERE TURNO_DESCRIPCION = @DETALLE)

	IF @ESTADO = 1
	BEGIN
		INSERT GDDIANOS.TURNO_POR_COCHE VALUES(@PATENTE, @TURNOID)
	END
	ELSE
	BEGIN
		DELETE GDDIANOS.TURNO_POR_COCHE WHERE (@TURNOID = TURNO_TURNO_ID)
	END
END

GO
CREATE PROCEDURE GDDIANOS.GET_AUTOS_ACTIVOS_DE_CHOFER(@DNI NUMERIC(18,0)) AS
BEGIN
	SELECT COCHE_PATENTE, COCHE_ESTADO
	FROM GDDIANOS.COCHE 
	WHERE COCHE_CHOFER = GDDIANOS.GET_ID_PERSONA_POR_DNI(@DNI) AND COCHE_ESTADO = 1
END

GO
CREATE PROCEDURE GDDIANOS.REGISTRAR_VIAJE (@TURNO INT, @FECHA DATETIME, @HORA_I DATETIME,
							@HORA_F DATETIME, @KM DECIMAL, @CHOFER INT, @CLIENTE INT) AS
	BEGIN

			
			INSERT INTO GDDIANOS.VIAJE (VIAJE_TURNO_ID,VIAJE_FECHA,VIAJE_HORA_INICIO,
			VIAJE_HORA_FIN,	VIAJE_CANTIDAD_KM, VIAJE_CHOF_PERS_ID, VIAJE_CLIENTE_PERS_ID)
			VALUES (@TURNO,CONVERT(DATE,@FECHA,121),CONVERT (TIME,@HORA_I,121), 
							CONVERT (TIME,@HORA_F,121), @KM, GDDIANOS.GET_ID_PERSONA_POR_DNI(@CHOFER), GDDIANOS.GET_ID_PERSONA_POR_DNI(@CLIENTE))
	END
	
GO
CREATE PROCEDURE GDDIANOS.ROL_HABILITADO_POR_USUARIO (@USUARIO VARCHAR(50), @ROLID INT)
AS
BEGIN
	return (SELECT COUNT(*)
	FROM GDDIANOS.ROL_POR_USUARIO
	WHERE ROL_USUA_USERNAME = @USUARIO AND ROL_ROL_ID = @ROLID)
END

GO
CREATE PROCEDURE GDDIANOS.GET_USUARIO_POR_DNI (@ID INT)
AS
BEGIN
	SELECT USUA_USERNAME
	FROM GDDIANOS.USUARIO JOIN GDDIANOS.PERSONA ON (PERS_ID = USUA_PERS_ID)
	WHERE PERS_DNI = @ID
END

GO
CREATE PROCEDURE GDDIANOS.GET_TURNOS_AUTO(@PATENTE VARCHAR(10)) AS
BEGIN
	SELECT DISTINCT TURNO_TURNO_ID, TURNO_DESCRIPCION 
	FROM GDDIANOS.TURNO_POR_COCHE TC 
		JOIN GDDIANOS.TURNO T ON (TC.TURNO_TURNO_ID=T.TURNO_ID)
	WHERE TURNO_COCHE_PATENTE = @PATENTE AND TURNO_ESTADO = 1
		
END

GO
CREATE PROCEDURE GDDIANOS.VIAJE_YA_REGISTRADO (@FECHA DATETIME ,@HORAI DATETIME, @HORAF DATETIME, @CHOFER INT) AS
IF EXISTS (SELECT VIAJE_ID FROM GDDIANOS.VIAJE 
WHERE CONVERT(DATE,@FECHA,121) = VIAJE_FECHA 
	AND (CONVERT (TIME,@HORAI,121) BETWEEN VIAJE_HORA_INICIO AND VIAJE_HORA_FIN
	OR CONVERT (TIME,@HORAF,121) BETWEEN VIAJE_HORA_INICIO AND VIAJE_HORA_FIN)	
	AND GDDIANOS.GET_ID_PERSONA_POR_DNI(@CHOFER) = VIAJE_CHOF_PERS_ID)
RETURN (0)
ELSE
RETURN (1)


GO
CREATE PROCEDURE GDDIANOS.GET_ID_PAGO_INSERTADO AS
BEGIN
RETURN (SELECT MAX(PAGO_NUMERO) FROM GDDIANOS.PAGO)
END;

GO
CREATE PROCEDURE GDDIANOS.HORARIO_SE_ENCUENTRA_EN_TURNO (@HORAI NUMERIC(18,0), @HORAF NUMERIC(18,0), @TURNOID INT) AS
IF EXISTS( SELECT TURNO_ID
			FROM GDDIANOS.TURNO
			WHERE (@HORAI BETWEEN TURNO_HORA_INICIO AND TURNO_HORA_FIN) AND
			(@HORAF BETWEEN TURNO_HORA_INICIO AND TURNO_HORA_FIN) AND
			@TURNOID = TURNO_ID)
	 
RETURN (0)
ELSE
RETURN (1)

/*FUNCIONES*/



GO
CREATE FUNCTION GDDIANOS.CALCULAR_TRIMESTRE(@FECHA DATETIME) RETURNS INT 
AS
BEGIN
IF(MONTH(@FECHA)=1 OR MONTH(@FECHA)=2 OR MONTH(@FECHA)=3)
RETURN 1
IF(MONTH(@FECHA)=4 OR MONTH(@FECHA)=5 OR MONTH(@FECHA)=6)
RETURN 2
IF(MONTH(@FECHA)=7 OR MONTH(@FECHA)=8 OR MONTH(@FECHA)=9)
RETURN 3
IF(MONTH(@FECHA)=10 OR MONTH(@FECHA)=11 OR MONTH(@FECHA)=12)
RETURN 4
RETURN 0
END;

GO
CREATE FUNCTION GDDIANOS.PASSWORD_HASH(@PASSWORD NUMERIC(18,0))
	RETURNS VARBINARY(32)
	BEGIN
		RETURN CONVERT(VARBINARY(32),HASHBYTES('SHA2_256',CONVERT(VARCHAR(32),@PASSWORD)))
	END;

GO
CREATE FUNCTION GDDIANOS.GETIDPERSONAPORDNI(@DNI_CHOF NUMERIC(18,0))
RETURNS INT
BEGIN
	DECLARE @CHOFER INT
	SELECT  @CHOFER = PERS_ID  FROM GDDIANOS.PERSONA WHERE PERSONA.PERS_DNI=@DNI_CHOF 
	RETURN @CHOFER
END;

GO
CREATE FUNCTION GDDIANOS.GET_ID_TURNO_POR_HORAS(@INICIO DATETIME,@FIN DATETIME)
RETURNS INT
BEGIN	
	DECLARE @ID INT
	SELECT @ID=TURNO_ID FROM GDDIANOS.TURNO WHERE TURNO_HORA_INICIO<=DATEPART(HOUR, @INICIO) AND TURNO_HORA_FIN>DATEPART(HOUR, @FIN)
	RETURN @ID
END;

GO

CREATE FUNCTION GDDIANOS.GET_ID_TURNO_POR_HORARIO(@INICIO NUMERIC(18,0),@FIN NUMERIC(18,0))
RETURNS INT
BEGIN	
	DECLARE @ID INT
	SELECT @ID=TURNO_ID FROM GDDIANOS.TURNO WHERE TURNO_HORA_INICIO<=@INICIO AND TURNO_HORA_FIN>@FIN
	RETURN @ID
END;

GO
CREATE PROCEDURE GDDIANOS.FIND_TURNO_HABILITADO
AS
BEGIN
	SELECT *
	FROM GDDIANOS.TURNO
	WHERE TURNO_ESTADO = 1
END

GO
CREATE FUNCTION GDDIANOS.GET_IMPORTE_ITEM_FACTURA(@MES INT,@ANIO INT, @ID_PERSONA INT,@VIAJE_ID INT) RETURNS DECIMAL(18,2) AS
BEGIN
	DECLARE @IMPORTE DECIMAL(18,2);
	
	SELECT @IMPORTE=(TURNO_PRECIO_BASE + (VIAJE_CANTIDAD_KM * TURNO_VALOR_KM))
			FROM GDDIANOS.VIAJE VIAJE JOIN GDDIANOS.TURNO TURNO ON (VIAJE.VIAJE_TURNO_ID = TURNO.TURNO_ID)
				JOIN GDDIANOS.PERSONA PERSONA ON(VIAJE_CLIENTE_PERS_ID = PERSONA.PERS_ID)
				WHERE MONTH(VIAJE_FECHA) = @MES AND
					YEAR(VIAJE_FECHA) = @ANIO AND PERS_ID=@ID_PERSONA AND VIAJE.VIAJE_ID=@VIAJE_ID
	RETURN (@IMPORTE);
END;

GO
CREATE FUNCTION GDDIANOS.GET_ID_PERSONA_POR_DNI(@DNI_PERS NUMERIC(18,0))
RETURNS INT
BEGIN
	DECLARE @PERS INT
	SELECT  @PERS = PERS_ID  FROM GDDIANOS.PERSONA WHERE PERSONA.PERS_DNI = @DNI_PERS 
	RETURN @PERS
END;


/*TRIGGERS*/

GO

CREATE TRIGGER GDDIANOS.TRIG_ALTA_USUARIO_CLIENTE ON GDDIANOS.CLIENTE AFTER INSERT
AS
BEGIN
	DECLARE @PERS_ID INT;
	DECLARE @PERS_DNI NUMERIC(18,0);
	DECLARE @USU VARCHAR(50);

	DECLARE C1 CURSOR FOR
	SELECT PERS_DNI,PERS_ID P FROM INSERTED I JOIN PERSONA P ON P.PERS_ID=I.CLIE_PERS_ID;
	OPEN C1;
	FETCH NEXT FROM C1 INTO @PERS_DNI,@PERS_ID;
	WHILE(@@FETCH_STATUS = 0)
	BEGIN
	    SELECT @USU=USUA_USERNAME FROM GDDIANOS.USUARIO WHERE USUA_USERNAME=convert(varchar(10),@PERS_DNI);

		IF((@USU='') OR (@USU IS NULL))--NO EXISTE EL USUARIO. lE PONGO ROL CHOFER
		BEGIN
			INSERT INTO GDDIANOS.USUARIO
			(USUA_USERNAME,USUA_PASSWORD,USUA_CANTIDAD_INTENTOS,USUA_ESTADO,USUA_PERS_ID)
			VALUES (@PERS_DNI,CONVERT(VARBINARY(32),GDDIANOS.PASSWORD_HASH(@PERS_DNI),2),0,1,@PERS_ID);			
		END
		
		INSERT INTO GDDIANOS.ROL_POR_USUARIO (ROL_USUA_USERNAME,ROL_ROL_ID) VALUES(@PERS_DNI,3);
		
	  FETCH NEXT FROM C1 INTO @PERS_DNI,@PERS_ID;
	END;
	CLOSE C1;
	DEALLOCATE C1;

END;

go
CREATE TRIGGER GDDIANOS.TRIG_ALTA_USUARIO_CHOFER ON GDDIANOS.CHOFER AFTER INSERT
AS
BEGIN
	DECLARE @PERS_ID INT;
	DECLARE @PERS_DNI NUMERIC(18,0);
	DECLARE @USU VARCHAR(50);
	DECLARE C1 CURSOR FOR
	SELECT PERS_DNI,PERS_ID P FROM INSERTED I JOIN PERSONA P ON P.PERS_ID=I.CHOF_PERS_ID;
	OPEN C1;
	FETCH NEXT FROM C1 INTO @PERS_DNI,@PERS_ID;
	WHILE(@@FETCH_STATUS = 0)
	BEGIN 
	    SELECT @USU=USUA_USERNAME FROM GDDIANOS.USUARIO WHERE USUA_USERNAME=convert(varchar(10),@PERS_DNI);
		IF((@USU='') OR (@USU IS NULL))--NO EXISTE EL USUARIO. lE PONGO ROL CHOFER
		BEGIN
			INSERT INTO GDDIANOS.USUARIO
			(USUA_USERNAME,USUA_PASSWORD,USUA_CANTIDAD_INTENTOS,USUA_ESTADO,USUA_PERS_ID)
			VALUES (@PERS_DNI,CONVERT(VARBINARY(32),GDDIANOS.PASSWORD_HASH(@PERS_DNI),2),0,1,@PERS_ID);	
		END
		
	    INSERT INTO GDDIANOS.ROL_POR_USUARIO (ROL_USUA_USERNAME,ROL_ROL_ID) VALUES(@PERS_DNI,2);
		
	  FETCH NEXT FROM C1 INTO @PERS_DNI,@PERS_ID;
	END;
	CLOSE C1;
	DEALLOCATE C1;

END;

GO
CREATE TRIGGER GDDIANOS.CHECK_PERSONA_CLIENTE_FACTURA ON GDDIANOS.FACTURA INSTEAD OF INSERT
AS
BEGIN
	DECLARE @NOMBRE VARCHAR(255),@FACT_PERS_ID INT;DECLARE @TIPO_PERSONA INT;DECLARE @FACT_ID_INS INT;DECLARE @MES INT;DECLARE @ANIO INT; DECLARE @FACT_FECHA_GENERADA DATETIME;DECLARE @FACT_FECHA_INICIO DATETIME;DECLARE @FACT_FECHA_FIN DATETIME;DECLARE @FACT_IMPORTE_TOTAL DECIMAL(18,2);
	DECLARE FACTURAS_A_INSERTAR 
	
	CURSOR FOR 
	SELECT inserted.*,P.PERS_NOMBRE FROM INSERTED
	JOIN persona p on p.pers_id=inserted.fact_pers_id 
	JOIN CLIENTE C ON C.CLIE_PERS_ID=P.PERS_ID
	
	
	OPEN FACTURAS_A_INSERTAR
	FETCH NEXT FROM FACTURAS_A_INSERTAR INTO @FACT_ID_INS,@FACT_FECHA_GENERADA,@FACT_FECHA_INICIO,@FACT_FECHA_FIN,@FACT_IMPORTE_TOTAL,@FACT_PERS_ID,@NOMBRE
	WHILE (@@FETCH_STATUS=0)
	BEGIN
		
		IF(@NOMBRE<>'') 
		BEGIN 
	 
			INSERT INTO GDDIANOS.FACTURA ([FACT_ID]
			  ,[FACT_FECHA_GENERADA]
			  ,[FACT_FECHA_INICIO]
			  ,[FACT_FECHA_FIN]
			  ,[FACT_IMPORTE_TOTAL]
			  ,[FACT_PERS_ID])
			   VALUES(
			   @FACT_ID_INS
			  ,@FACT_FECHA_GENERADA
			  ,@FACT_FECHA_INICIO
			  ,@FACT_FECHA_FIN
			  ,@FACT_IMPORTE_TOTAL
			  ,@FACT_PERS_ID)
			  
			  ;
	
				INSERT INTO GDDIANOS.ITEM_FACTURA --INSERTAR LOS ITEMS DE LA FACTURA
				SELECT @FACT_ID_INS,VIAJE_ID,GDDIANOS.GET_IMPORTE_ITEM_FACTURA(MONTH(@FACT_FECHA_INICIO) ,YEAR(@FACT_FECHA_INICIO),@FACT_PERS_ID,VIAJE_ID)
				FROM GDDIANOS.VIAJE 
				WHERE VIAJE_CLIENTE_PERS_ID=@FACT_PERS_ID 
				AND MONTH(VIAJE_FECHA) = MONTH(@FACT_FECHA_INICIO) 
				AND YEAR(VIAJE_FECHA) = YEAR(@FACT_FECHA_INICIO)
			
				--Update del importe que al generar la cabecera esta en cero 

				UPDATE GDDIANOS.FACTURA SET FACT_IMPORTE_TOTAL=(SELECT SUM(ITEM_PRECIO_UNIT) FROM GDDIANOS.ITEM_FACTURA WHERE ITEM_FACT_ID=@FACT_ID_INS) WHERE FACT_ID=@FACT_ID_INS  

		END;
		ELSE
		BEGIN 
			RAISERROR('ERROR. NO SE PUEDE INSERTAR UNA FACTURA A UN CHOFER', 16, 1)
		END;
		
		FETCH NEXT FROM FACTURAS_A_INSERTAR INTO @FACT_ID_INS,@FACT_FECHA_GENERADA,@FACT_FECHA_INICIO,@FACT_FECHA_FIN,@FACT_IMPORTE_TOTAL,@FACT_PERS_ID,@NOMBRE
	END
	CLOSE FACTURAS_A_INSERTAR;
	DEALLOCATE FACTURAS_A_INSERTAR;
END;


GO
--SE GENERAN LOS TRES ROLES POR DEFECTO Y EL USUARIO ADMINISTRADOR QUE TIENE TODOS LOS ROLES
INSERT INTO GDDIANOS.ROL (ROL_ID,ROL_NOMBRE,ROL_ESTADO) VALUES(1,'ADMIN',1);
INSERT INTO GDDIANOS.ROL (ROL_ID,ROL_NOMBRE,ROL_ESTADO) VALUES(2,'CHOFER',1);
INSERT INTO GDDIANOS.ROL (ROL_ID,ROL_NOMBRE,ROL_ESTADO) VALUES(3,'CLIENTE',1);	
	
INSERT INTO GDDIANOS.USUARIO VALUES ('ADMIN', CONVERT(VARBINARY(32),'e6b87050bfcb8143fcb8db0170a4dc9ed00d904ddd3e2a4ad1b1e8dc0fdc9be7',2),0,1,null);
INSERT INTO GDDIANOS.ROL_POR_USUARIO (ROL_USUA_USERNAME,ROL_ROL_ID) VALUES('ADMIN',1);
INSERT INTO GDDIANOS.ROL_POR_USUARIO (ROL_USUA_USERNAME,ROL_ROL_ID) VALUES('ADMIN',2);
INSERT INTO GDDIANOS.ROL_POR_USUARIO (ROL_USUA_USERNAME,ROL_ROL_ID) VALUES('ADMIN',3);


GO

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(1,'altaAutomovil');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(2,'bajaAutomovil');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(3,'modificacionAutomovil');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(4,'altaChofer');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(5,'bajaChofer');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(6,'modificacionChofer');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(7,'altaCliente');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(8,'bajaCliente');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(9,'modificacionCliente');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(10,'facturacion');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(11,'listadoEstadistico');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(12,'registroDeViajes');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(13,'rendicionDeViajes');


INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(14,'altaRol');


INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(15,'bajaRol');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(16,'modificacionRol');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(17,'altaTurno');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(18,'bajaTurno');

INSERT INTO GDDIANOS.FUNCIONALIDAD
(FUNCIONALIDAD_ID,DESCRIPCION)
VALUES(19,'modificacionTurno');

go
INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL 
(FUNC_ROL_ID,FUNC_ID) 
VALUES(1,1);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,2);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,3);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,4);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,5);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,6);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,7);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,8);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,9);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,10);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,11);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,12);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,13);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,14);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,15);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,16);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,17);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,18);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(1,19);

--Inserts funcionalidades para choferes
INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(2,7);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(2,8); 

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(2,9); 

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(2,1); 

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(2,2);
 
INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(2,3);

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(2,11);  

INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(2,12); 


--Inserts funcionalidades para Clientes
INSERT INTO GDDIANOS.FUNCIONALIDAD_POR_ROL
(FUNC_ROL_ID,FUNC_ID)
VALUES(3,10); 
/*COMIENZO DE LA MIGRACION*/

go
--Migracion choferes
INSERT INTO gddianos.PERSONA 
 SELECT DISTINCT
       [Chofer_Telefono]
	  ,[Chofer_Nombre]
      ,[Chofer_Apellido]
      ,[Chofer_Dni]
      ,[Chofer_Direccion]
      ,[Chofer_Fecha_Nac]
	  ,1
      ,[Chofer_Mail]
  FROM [GD1C2017].[gd_esquema].[Maestra]
  GO
  INSERT INTO GDDIANOS.CHOFER 
  SELECT PERS_ID FROM GDDIANOS.PERSONA WHERE PERS_DNI IN(SELECT DISTINCT CHOFER_DNI FROM [GD1C2017].[gd_esquema].[Maestra])
   
	
go
--Migracion clientes
INSERT INTO GDDIANOS.PERSONA
	   SELECT DISTINCT
	   [Cliente_Telefono]
	  ,[Cliente_Nombre]
      ,[Cliente_Apellido]
      ,[Cliente_Dni]
      ,[Cliente_Direccion]
      ,[Cliente_Fecha_Nac]
	  ,1 
	  ,[Cliente_Mail]
 FROM [GD1C2017].[gd_esquema].[Maestra]
;
GO 
INSERT INTO GDDIANOS.CLIENTE 
  SELECT PERS_ID,'' FROM GDDIANOS.PERSONA WHERE PERS_DNI IN(SELECT DISTINCT CLIENTE_DNI FROM [GD1C2017].[gd_esquema].[Maestra])

go
 --Migracion Turno
 insert into GDDIANOS.TURNO
      ([TURNO_HORA_INICIO]
      ,[TURNO_HORA_FIN]
      ,[TURNO_DESCRIPCION]
      ,[TURNO_VALOR_KM]
      ,[TURNO_PRECIO_BASE]
      ,[TURNO_ESTADO])
SELECT distinct 
       [Turno_Hora_Inicio]
      ,[Turno_Hora_Fin]
      ,[Turno_Descripcion]
      ,[Turno_Valor_Kilometro]
      ,[Turno_Precio_Base]
	  ,1
  FROM [GD1C2017].[gd_esquema].[Maestra]
;
go
  --Migracion marcas
INSERT INTO GDDIANOS.MARCA
	([MARCA_NOMBRE])
	SELECT DISTINCT [AUTO_MARCA] FROM 	[GD1C2017].[gd_esquema].[Maestra]
	;
go
--Migracion modelos
INSERT INTO GDDIANOS.MODELO
	([MODE_CODIGO]
	,[MODE_MARCA])
	SELECT distinct 
      [Auto_Modelo]
	  ,[Auto_Marca]
  FROM [GD1C2017].[gd_esquema].[Maestra]
go
--Migracion coches
INSERT INTO GDDIANOS.COCHE 
	(  [COCHE_PATENTE]
      ,[COCHE_LICENCIA]
      ,[COCHE_ESTADO]
      ,[COCHE_MARCA_NOMBRE]
      ,[COCHE_MODELO_CODIGO]
      ,[COCHE_RODADO]
	  ,[COCHE_CHOFER])
	  SELECT DISTINCT 
	    [Auto_PATENTE]
	   ,[Auto_Licencia]
	   ,1
	   ,[AUTO_MARCA] 
       ,[Auto_Modelo]
	   ,[Auto_Rodado]
	   ,(SELECT PERS_ID FROM GDDIANOS.PERSONA JOIN GDDIANOS.CHOFER ON (CHOF_PERS_ID=PERS_ID) WHERE PERS_DNI=[CHOFER_DNI])
	  FROM [GD1C2017].[gd_esquema].[Maestra]
;
go

--TABLA INTERMEDIA TURNO POR COCHE
INSERT INTO GDDIANOS.TURNO_POR_COCHE
( [TURNO_COCHE_PATENTE], [TURNO_TURNO_ID])
SELECT DISTINCT 
[COCHE_PATENTE], [TURNO_ID]
FROM GDDIANOS.TURNO T JOIN GD_ESQUEMA.MAESTRA M ON (T.TURNO_DESCRIPCION = M.Turno_Descripcion),
	 GDDIANOS.COCHE C JOIN GD_ESQUEMA.MAESTRA M1 ON (C.COCHE_PATENTE = M1.Auto_Patente)
	 GROUP BY [COCHE_PATENTE], [TURNO_ID];
 go
 --LOS VIAJES DURAN UNA HORA
 INSERT INTO GDDIANOS.VIAJE 
  (    [VIAJE_TURNO_ID]
      ,[VIAJE_FECHA]
	  ,[VIAJE_HORA_INICIO]
      ,[VIAJE_HORA_FIN]
      ,[VIAJE_CANTIDAD_KM]
      ,[VIAJE_CHOF_PERS_ID]
      ,[VIAJE_CLIENTE_PERS_ID])
  SELECT DISTINCT GDDIANOS.GET_ID_TURNO_POR_HORAS([VIAJE_FECHA],[VIAJE_FECHA]),CONVERT(DATE,[VIAJE_FECHA],121),CONVERT(TIME,[VIAJE_FECHA],121),DATEADD (HOUR , 1,CONVERT (TIME, [VIAJE_FECHA],121)),[Viaje_Cant_Kilometros] ,GDDIANOS.GETIDPERSONAPORDNI([CHOFER_DNI]),GDDIANOS.GETIDPERSONAPORDNI([CLIENTE_DNI])  
  FROM  [GD1C2017].[gd_esquema].[Maestra] F
  ;
  go

  --MIGRACION FACTURAS
INSERT INTO GDDIANOS.FACTURA ([FACT_ID]
	  ,[FACT_FECHA_GENERADA]
      ,[FACT_FECHA_INICIO]
      ,[FACT_FECHA_FIN]
      ,[FACT_IMPORTE_TOTAL]
	  ,[FACT_PERS_ID])
	  SELECT DISTINCT Factura_Nro
      ,Factura_Fecha --FECHA GENERADA
	  ,Factura_Fecha_Inicio
      ,Factura_Fecha_Fin
	  ,0
	  ,PERSONA.PERS_ID
	   FROM GD_ESQUEMA.MAESTRA,GDDIANOS.PERSONA,GDDIANOS.CLIENTE WHERE CLIENTE_DNI=PERS_DNI AND PERS_ID=CLIE_PERS_ID
	  AND Factura_Nro IS NOT NULL AND Factura_Fecha IS NOT NULL
	  AND Factura_Fecha_Inicio IS NOT NULL AND Factura_Fecha_Fin IS NOT NULL
	  AND 5 is not null;
GO

INSERT INTO GDDIANOS.PAGO ([PAGO_FECHA]
	  ,[PAGO_PERS_ID]
      ,[PAGO_TURNO_ID]
      ,[PAGO_NUMERO]
      ,[PAGO_IMPORTE_TOTAL]
	  ,[PAGO_PORCENTAJE])
	   SELECT DISTINCT Rendicion_Fecha
	  ,PERSONA.PERS_ID 
	  ,GDDIANOS.GET_ID_TURNO_POR_HORAS(VIAJE_FECHA,VIAJE_FECHA)
	  ,Rendicion_Nro      
	  ,0--(SELECT SUM(RENDICION_IMPORTE) FROM GD_ESQUEMA.MAESTRA MIG1 WHERE Rendicion_Nro IS NOT NULL AND MIG1.RENDICION_NRO=MIG2.RENDICION_NRO)
	  ,30
	  FROM GD_ESQUEMA.MAESTRA MIG2,GDDIANOS.PERSONA,GDDIANOS.CHOFER
	  WHERE CHOFER_DNI=PERS_DNI AND PERS_ID=CHOF_PERS_ID
			AND Rendicion_Fecha IS NOT NULL AND Rendicion_Nro IS NOT NULL 
			AND Rendicion_Importe IS NOT NULL;
go
INSERT INTO GDDIANOS.ITEM_PAGO
select p.PAGO_NUMERO,viaje_id,(TURNO_PRECIO_BASE + (VIAJE_CANTIDAD_KM * TURNO_VALOR_KM))* (p.pago_porcentaje/100)
from gddianos.viaje v
join gddianos.pago p on(p.PAGO_PERS_ID=v.VIAJE_CHOF_PERS_ID and p.PAGO_FECHA=v.VIAJE_FECHA and VIAJE_TURNO_ID=PAGO_TURNO_ID)
join gddianos.TURNO t on t.TURNO_ID=v.VIAJE_TURNO_ID
order by pago_numero
go

update gddianos.pago
set pago_importe_total=((select sum(ITEM_PAGO_VIAJE_IMPORTE) from gddianos.ITEM_PAGO where ITEM_PAGO_NUMERO=PAGO_NUMERO)*(pago_porcentaje/100)) 